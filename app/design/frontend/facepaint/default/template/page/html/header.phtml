<?php
/**
 * @var Mage_Page_Block_Html_Header $this
 */ 
?>
<?php

    $skinpath=Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_SKIN).'frontend/facepaint/default/';
	$theme = $this->helper('ultimo');
	$helperThis = $this->helper('ultimo/template_page_html_header');
	//Get HTML of header blocks
	//**************************************************************
	//User menu
	//Important: this block has to be rendered at the very beginning of this file
	$userMenuHtml = $this->getChildHtml('user_menu');
	//Switchers
	$currencySwitcher = $this->getChildHtml('currency');
	$languageSwitcher = $this->getChildHtml('store_language');
	$hasHeaderCollateral = ($currencySwitcher || $languageSwitcher) ? TRUE : FALSE;
	//Logo
	$logoHtml = $this->getChildHtml('logo');
	//Layout settings and basic flags
	//**************************************************************
	//Sticky header
	$sticky = $theme->getCfg('header/sticky');
	//Mobile header
	if ($sticky)
	{
		if (($mobileMenuThreshold = $helperThis->getMobileMenuThreshold()) === NULL)
		{
			$mobileMenuThreshold = 770; //Set default value, if threshold doesn't exist
		}
	}
	$mobileHeaderMode = $theme->getCfg('header/mode');
	//This flag indicates that in mobile header language/currency switchers should be hidden
	//and replaced with mobile versions of those switchers
	$moveSwitchers = FALSE;
	if ($mobileHeaderMode)
	{
		//Get only if mobile header enabled
		$moveSwitchers = $theme->getCfg('header/mobile_move_switchers');
	}
	//Check if main menu is displayed inisde a section (full-width section) at the bottom of the header
	$menuDisplayedInFullWidthContainer = $helperThis->isMenuDisplayedInFullWidthContainer();
	//Get grid classes for header sections
	$grid = $helperThis->getGridClasses();
	//Get positions of header blocks
	$position = $helperThis->getPositions();
	//Get flags indicating if blocks need to be moved below the skip links on mobile view
	$move = $helperThis->getMoveBelowSkipLinks();
	//Get flags indicating if blocks are displayed directly inside the header block template or inside one of the child blocks
	$display = $helperThis->getDisplayedInHeaderBlock();
    
	//Design settings
	//**************************************************************
	$headerInnerBgColor     = $theme->getCfgDesign('header/inner_bg_color');
	$headerTopInnerBgColor	= $theme->getCfgDesign('header_top/inner_bg_color');
	$headerTopStretched		= $theme->getCfgDesign('header_top/stretched');
	$headerPrimaryStretched	= $theme->getCfgDesign('header_primary/stretched');
	$navInnerBgColor        = $theme->getCfgDesign('nav/inner_bg_color');
	$navStretched           = $theme->getCfgDesign('nav/stretched');
	$navDropShadow          = $theme->getCfgDesign('effects/shadow_nav');
	//Header
	$classes['root'] = '';
	if ($moveSwitchers)
		$classes['root'] .= ' move-switchers';
	//Header top
	$classes['top'] = '';
	if ($theme->isColor($headerInnerBgColor) || $theme->isColor($headerTopInnerBgColor))
		$classes['top'] .= ' show-bg';
	if ($headerTopStretched)
		$classes['top'] .= ' stretched';
	//Header primary
	$classes['primary'] = '';
	if ($theme->isColor($headerInnerBgColor))
		$classes['primary'] .= ' show-bg';
	if ($headerPrimaryStretched)
		$classes['primary'] .= ' stretched';
	
	//Menu
	$classes['nav-container'] = '';
	if ($sticky && $theme->getCfg('header/sticky_full_width'))
		$classes['nav-container'] .= ' sticky-container--full-width';
	$classes['nav'] = '';
	if ($theme->isColor($navInnerBgColor)) //If menu has inner background color, add class indicating that it can have an outline
		$classes['nav'] .= ' has-outline';
	if ($navDropShadow === 'inner-container')
		$classes['nav'] .= ' show-bg';
	elseif ($navDropShadow === 'bar')
		$classes['nav'] .= ' nav--bar-drop-shadow';
	if ($navStretched)
		$classes['nav'] .= ' stretched';
	if ($menuDisplayedInFullWidthContainer === FALSE)
		$classes['nav'] .= ' simple';
	//Assign blocks to selected positions
	//**************************************************************
	$p = array();
	//Mini cart
	//--------------------------------------------------------------
	//Get flag which indicates that mini cart block exists and is displayed
	$existsInChildBlock['cart'] = Mage::registry('headerDisplayMiniCart');
	if ($display['cart'])
	{
		$cartHtml = $this->getChildHtml('cart_sidebar');
		if ($cartHtml)
		{
			$p[$position['cart']][] = $cartHtml;
		}
	}
	//Mini compare
	//--------------------------------------------------------------
	//Get flag which indicates that mini compare block exists and is displayed
	$existsInChildBlock['compare'] = Mage::registry('headerDisplayMiniCompare');
	if ($display['compare'])
	{
		$compareHtml = $this->getChildHtml('compareMini');
		if ($compareHtml)
		{
			$p[$position['compare']][] = $compareHtml;
		}
	}
	//Logo
	//--------------------------------------------------------------
	$p[$position['logo']][] = $logoHtml;
	//Search
	//--------------------------------------------------------------
	//Get flag which indicates that search box exists and is displayed
	$existsInChildBlock['search'] = Mage::registry('headerDisplaySearch');
	if ($display['search'])
	{
		$searchHtml = $this->getChildHtml('search_wrapper');
		if ($searchHtml)
		{
			$p[$position['search']][] = $searchHtml;
		}
	}   
         
	//User menu
	//--------------------------------------------------------------   
	$p[$position['user-menu']][] = $userMenuHtml;
	//User menu can contain account links (including Top Links).
	//Get flag which indicates that block with account links exists and is displayed.
	$existsInChildBlock['account-links'] = Mage::registry('headerDisplayAccountLinks');
    $counter=0;
	foreach ($p['primRightCol'] as $element)
    {
          if($counter==0) {
                $userHtmltext = $element;
          }     
    } 
    //Main menu
	//--------------------------------------------------------------
	$onsale_img = $this->getSkinUrl('images/on-sale.png');
    $freeshipping_img = $this->getSkinUrl('images/free_shipping50.png');
    $store_url = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB);
	$code_store = Mage::app()->getStore()->getCode();
	
	if($code_store == 'stripedsocks'):
		
    $menuHtml = '
	<div id="header-nav" class="nav-container skip-content sticky-container' . ($classes['nav-container'] ? $classes['nav-container'] : '') . '">
		<div class="nav container clearer' . ($classes['nav'] ? $classes['nav'] : '') . '">
			<div class="inner-container" itemtype="http://schema.org/LocalBusiness" itemscope="">' . $this->getChildHtml('topMenu') .' 
           <!----------Added code by dinesh ----------------> 
            <div class="onsale"><a href="'.$store_url.'other/on-sale.html" title="On Sale"><img border="0" alt="On Sale" src="'.$onsale_img.'"></a>
            </div>
           <!-- <div class="free_ship">
                <a title="Free shipping" href="shipping#free_shipping"><img border="0" title="Free Shipping" alt="Free Shipping" src="'.$freeshipping_img.'"></a>
            </div>
            <div class="topleft_menu">
              <ul>
                 <li class="home"><a title="Faq" href="'.$store_url.'faq"><b>Faq</b></a></li>
                 <li class="about"><a title="About Us" href="'.$store_url.'about-us"><b>About us</b></a></li>    
                <li class="contact"><a title="Contact Us" href="'.$store_url.'contact-us"><b>Contact</b></a></li>
              </ul>
            </div> -->
          <!----------End of code added by dinesh ---------------->  
            </div> <!-- end: inner-container -->
		</div> <!-- end: nav -->
	</div> <!-- end: nav-container -->';
	    
	else:
	     
	    $menuHtml = '
	<div id="header-nav" class="nav-container skip-content sticky-container' . ($classes['nav-container'] ? $classes['nav-container'] : '') . '">
		<div class="nav container clearer' . ($classes['nav'] ? $classes['nav'] : '') . '">
			<div class="inner-container" itemtype="http://schema.org/LocalBusiness" itemscope="">' . $this->getChildHtml('topMenu') .'
			</div> <!-- end: inner-container -->
		</div> <!-- end: nav -->
	</div> <!-- end: nav-container -->';
	endif;
	if ($menuDisplayedInFullWidthContainer === FALSE)
	{
		$p[$position['main-menu']][] = $menuHtml;
	}
	//Skip links and blocks displayed via skip links
	//**************************************************************
	//Skip links count
	$skipLinksCount = 0;
	//Search
	if (!empty($searchHtml) || $existsInChildBlock['search'])
	{
		$skipLinksCount++;
	}
	//Account links
	if ($existsInChildBlock['account-links'])
	{
		$skipLinksCount++;
	}
	//Mini cart
	if (!empty($cartHtml) || $existsInChildBlock['cart'])
	{
		$skipLinksCount++;
	}
	//Mini compare
	if (!empty($compareHtml) || $existsInChildBlock['compare'])
	{
		$skipLinksCount++;
	}
	//Menu
	if (!empty($menuHtml)) 
	{
		$skipLinksCount++;
	}
?>
<div id="top" class="header-container header-regular<?php if ($classes['root']) echo $classes['root']; ?>">
<div class="graybar">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
        <div class="text-center top-blue-font"><b>Same Day Shipping</b> by 1pm EST $50</div>
      </div>
      <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
        <div class="text-center top-blue-font"><b>Same Day Shipping</b> by 1pm EST</div>
      </div>
    </div>
</div>
</div>
 
<div class="container nopading">
	<div id="addtooverlay" style="display:none;">
		<div id="acp-overlay" class=""></div>
		<div id="ajaxcartpro-progress" class="" style="height: auto; width: auto; left: 533.5px; top: 266px;"> <img src="<?php echo $this->getSkinUrl('images/processing.gif');?>" alt="Loading"> <p>Please wait...</p> </div>
	</div>
<nav class="navbar navbar-default"> 

<div class="navbar-header">
  <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false"> 
  	<span class="sr-only">Toggle navigation</span> 
  	<span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span>
   </button>
  <?php if (isset($p['primLeftCol'])): ?>
          <?php foreach ($p['primLeftCol'] as $element): 
                                 //if($counter==1):
                                 //    $searchHtmltext = $element;
                                 //elseif($counter!=1): ?>
          <?php echo $element; ?>
          <?php /*endif;  $counter++;*/?>
          <?php endforeach; ?>
  	<?php endif; ?>

</div> <!-- /.navbar-header  -->

<!-- Collect the nav links, forms, and other content for toggling -->
<div class="collapse navbar-collapse nopading" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">
        <li><a href="<?php echo $store_url.'coupon-codes'; ?>">Coupons</a></li>
        <li><a href="<?php echo $store_url.'design-contest'; ?>">Design Contest</a></li>
        <li><a href="<?php echo $store_url.'blog'; ?>">Our Blog</a></li>
        <li><a href="<?php echo $store_url.'sales/guest/form/'; ?>">Order Status</a></li> 
      </ul>
      <ul class="nav navbar-nav navbar-right">
         <?php echo $this->getChildHtml('user_menu') ?>
      </ul>
  <div class="header-top-search">
    <div class="row">
        <div class="col-md-6">
          <?php if (isset($p['primCentralCol'])): ?>
              <?php foreach ($p['primCentralCol'] as $element): ?>
             <?php echo $element; ?>
              <?php endforeach; ?>
           <?php endif; ?>
      
      <div class="col-md-3 pull-right">
       <div class="pull-right">
              <div class="live-chat"><a href="#" onclick="return SnapEngage.startLink();"><img  src="<?php echo $skinpath.'images/livechat.png';?>" alt="Contact us"></a></div>

            </div>
            <div class="phnnumber-sectn">
              <div class="phone-no">734-237-2468</div>
              <div class="time">Mon-Fri 10am - 4pm EST</div>
            </div>
           
      </div>
    </div>
  </div>
</div>

</nav>
<!-- /.navbar-collapse --> 
</div>
<!-- /.container -->     
          <?php
					//Important: do not add any additional blocks directly inside the "hp-blocks-holder" div.
					//Additional blocks, if needed, can be added inside columns (left, central, righ).
				?>
          <div class="hp-blocks-holder skip-links--<?php echo $skipLinksCount; ?>">
            <?php if ($hasHeaderCollateral && $mobileHeaderMode && $moveSwitchers): ?>
            
            <!-- Mobile header collaterals -->
            
            <div id="header-collateral" class="header-collateral"> <?php echo $languageSwitcher; ?> <?php echo $currencySwitcher; ?> </div>
            <?php endif; ?>
            
            <div class="clearer after-mobile-logo"></div>
            
            <!-- Skip links -->
            
            <?php if (!empty($menuHtml)): ?>
            <a href="#header-nav" class="skip-link skip-nav"> <span class="icon ic ic-menu"></span> <span class="label"><?php echo $this->__('Menu'); ?></span> </a>
            <?php endif; ?>
            <?php if (!empty($searchHtml) || $existsInChildBlock['search']): ?>
            <a href="#header-search" class="skip-link skip-search"> <span class="icon ic ic-search"></span> <span class="label"><?php echo $this->__('Search'); ?></span> </a>
            <?php endif; ?>
            <?php if ($existsInChildBlock['account-links']): ?>
            <a href="#header-account" class="skip-link skip-account"> <span class="icon ic ic-user"></span> <span class="label"><?php echo $this->__('My Account'); ?></span> </a>
            <?php endif; ?>
            <?php if (!empty($compareHtml) || $existsInChildBlock['compare']): ?>
            <a href="#header-compare" class="skip-link skip-compare"> <span class="icon ic ic-compare"></span>
            <?php if (($compareCount = Mage::registry('miniCompareProductCount')) > 0): ?>
            <span class="count"><?php echo $compareCount; ?></span>
            <?php endif; ?>
            <span class="label"><?php echo $this->__('Compare'); ?></span> </a>
            <?php endif; ?>
            
            <!-- Mini cart wrapper for cart and its skip link on mobile devices -->
            
            <div id="mini-cart-wrapper-mobile"></div>
            <div class="skip-links-clearer clearer"></div>
            
            <!-- end: Skip links --> 
            
            <!-- Additional containers for elements displayed on mobile devices -->
            
            <?php if ($move['search']): //Search on mobile devices ?>
            <div id="search-wrapper-mobile"></div>
            <?php endif; ?>
            <?php if ($move['user-menu']): //User Menu on mobile devices ?>
            <div id="user-menu-wrapper-mobile"></div>
            <?php endif; ?>
            <?php if ($move['compare']): //Mini compare on mobile devices ?>
            <div id="mini-compare-wrapper-mobile"></div>
            <?php endif; ?>
            
            <!-- Primary columns -->
            
       
            <?php if (isset($grid['primCentralCol'])): ?>
            
          
            
            <?php endif; ?>
            <?php $code_store = Mage::app()->getStore()->getCode();?>
            <?php if (isset($grid['primRightCol'])): ?>
            
            <!-- Right column --          
 
              <?php endif; ?>
            </div>
            <!-- end: hp-blocks-holder --> 
            
          </div>
          <!-- end: inner-container --> 
          
       
        <!-- end: header-primary --> 
        

      <!-- end: header-primary-container -->
      
      <?php if ($menuDisplayedInFullWidthContainer): ?>
      <?php echo $menuHtml; ?>
      <?php endif; ?>
      <div class="search-desktop"> <?php echo $searchHtmltext; ?> </div>
    </div>
    <!-- end: header-container3 --> 
  
</div>
<!-- end: header-container -->
<?php if($this->getIsHomePage()) { ?>
		<div class="container">
		    <div class="row">

		      <?php  echo $this->getLayout()->createBlock('bannerslider/default')->setTemplate('home-sliders/home-nivo-slider.phtml')->tohtml();  ?>	
		      <?php  echo $this->getLayout()->createBlock('core/template')->setTemplate('home-sliders/home-colors-palettes.phtml')->tohtml();  ?>	
		     
		    </div><!-- .row -->
		 </div> <!-- .container -->
<?php } ?> 
<?php if($this->getIsHomePage()) { ?>
<!--<div class="container" style="padding-top:15px;">
  <!--link rel="stylesheet" type="text/css" href="<?php //echo $skinpath.'css/jquery-ui.css');?>" media="all" />
  <script type="text/javascript" src="<?php //echo $this->getJsUrl('tabs/jquery-ui.js') ?>"></script-->
  <?php  //echo $this->getLayout()->createBlock('cms/block')->setBlockId('home-slider')->toHtml();?>
  <?php //echo $this->getLayout()->createBlock('cms/block')->setBlockId('attributeset ')->toHtml();?></div>
<?php } ?>
<!--<div class="clearer"></div>-->

<?php //Scripts %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ?>
<script type="text/javascript">
//<![CDATA[
	<?php //Mobile mode ------------------------------------------------- ?>
	<?php if ($mobileHeaderMode): ?>
		var SmartHeader = {
			mobileHeaderThreshold : 770
			, rootContainer : jQuery('.header-container')
			, init : function()
			{
				enquire.register('(max-width: ' + (SmartHeader.mobileHeaderThreshold - 1) + 'px)', {
					match: SmartHeader.moveElementsToMobilePosition,
					unmatch: SmartHeader.moveElementsToRegularPosition
				});
			}
			, activateMobileHeader : function()
			{
				SmartHeader.rootContainer.addClass('header-mobile').removeClass('header-regular');
			}
			, activateRegularHeader : function()
			{
				SmartHeader.rootContainer.addClass('header-regular').removeClass('header-mobile');
			}
			, moveElementsToMobilePosition : function()
			{
				SmartHeader.activateMobileHeader();
				//Move cart
				jQuery('#mini-cart-wrapper-mobile').prepend(jQuery('#mini-cart'));
			<?php if ($move['search']): ?>
				//Move search
				jQuery('#search-wrapper-mobile').prepend(jQuery('#header-search'));
			<?php endif; ?>
			<?php if ($move['user-menu']): ?>
				//Move User Menu
				jQuery('#user-menu-wrapper-mobile').prepend(jQuery('#user-menu'));
			<?php endif; ?>
			<?php if ($move['compare']): ?>
				//Move compare
				jQuery('#mini-compare-wrapper-mobile').prepend(jQuery('#mini-compare'));
			<?php endif; ?>
				//Reset active state
				jQuery('.skip-active').removeClass('skip-active');
				
				//Disable dropdowns
				jQuery('#mini-cart').removeClass('dropdown');
				jQuery('#mini-compare').removeClass('dropdown');
				//Clean up after dropdowns: reset the "display" property
				jQuery('#header-cart').css('display', '');
				jQuery('#header-compare').css('display', '');
			}
			, moveElementsToRegularPosition : function()
			{
				SmartHeader.activateRegularHeader();
				//Move cart
				jQuery('#mini-cart-wrapper-regular').prepend(jQuery('#mini-cart'));
			<?php if ($move['search']): ?>
				//Move search
				jQuery('#search-wrapper-regular').prepend(jQuery('#header-search'));
			<?php endif; ?>
			<?php if ($move['user-menu']): ?>
				//Move User Menu
				jQuery('#user-menu-wrapper-regular').prepend(jQuery('#user-menu'));
			<?php endif; ?>
			<?php if ($move['compare']): ?>
				//Move compare
				jQuery('#mini-compare-wrapper-regular').prepend(jQuery('#mini-compare'));
			<?php endif; ?>
				//Reset active state
				jQuery('.skip-active').removeClass('skip-active');
				//Enable dropdowns
				jQuery('#mini-cart').addClass('dropdown');
				jQuery('#mini-compare').addClass('dropdown');
			}
		}; //end: SmartHeader
		SmartHeader.init();
		jQuery(function($) {
			//Skip Links
			var skipContents = $('.skip-content');
			var skipLinks = $('.skip-link');
			skipLinks.on('click', function (e) {
				e.preventDefault();
				var self = $(this);
				var target = self.attr('href');
				//Get target element
				var elem = $(target);
				//Check if stub is open
				var isSkipContentOpen = elem.hasClass('skip-active') ? 1 : 0;
				//Hide all stubs
				skipLinks.removeClass('skip-active');
				skipContents.removeClass('skip-active');
				//Toggle stubs
				if (isSkipContentOpen) {
					self.removeClass('skip-active');
				} else {
					self.addClass('skip-active');
					elem.addClass('skip-active');
				}
			});
		}); //end: on document ready
	<?php endif; //end: mode  ?>
	<?php //Sticky header ------------------------------------------------- ?>
	<?php if ($sticky): ?>
		jQuery(function($) {
			var StickyHeader = {
				stickyThreshold : 320<?php //echo $mobileMenuThreshold; ?> 
				, isSticky : false
				, isSuspended : false
				, headerContainer : $('.header-container')
				, stickyContainer : $('.sticky-container')	//.nav-container
				, stickyContainerOffsetTop : 55 //Position of the bottom edge of the sticky container relative to the viewport
				, requiredRecalculation : false //Flag: required recalculation of the position of the bottom edge of the sticky container
				, calculateStickyContainerOffsetTop : function()
				{
					//Calculate the position of the bottom edge of the sticky container relative to the viewport
					StickyHeader.stickyContainerOffsetTop = 
						StickyHeader.stickyContainer.offset().top + StickyHeader.stickyContainer.outerHeight();
					//Important: disable flag
					StickyHeader.requiredRecalculation = false;
				}
				, init : function()
				{
					StickyHeader.hookToActivatedDeactivated(); //Important: call before activateSticky is called
					StickyHeader.calculateStickyContainerOffsetTop();
					StickyHeader.applySticky();
					StickyHeader.hookToScroll();
					StickyHeader.hookToResize();
					if (StickyHeader.stickyThreshold > 0)
					{
						enquire.register('(max-width: ' + (StickyHeader.stickyThreshold - 1) + 'px)', {
							match: StickyHeader.suspendSticky,
							unmatch: StickyHeader.unsuspendSticky
						});
					}
				}
				, applySticky : function()
				{
					if (StickyHeader.isSuspended) return;
					//If recalculation required
					if (StickyHeader.requiredRecalculation)
					{
						//Important: recalculate only when header is not sticky
						if (!StickyHeader.isSticky)
						{
							StickyHeader.calculateStickyContainerOffsetTop();
						}
					}
					var viewportOffsetTop = $(window).scrollTop();
					if (viewportOffsetTop > StickyHeader.stickyContainerOffsetTop)
					{
						if (!StickyHeader.isSticky)
						{
							StickyHeader.activateSticky();
						}
					}
					else
					{
						if (StickyHeader.isSticky)
						{
							StickyHeader.deactivateSticky();
						}
					}
				}
				, activateSticky : function()
				{
					var stickyContainerHeight = StickyHeader.stickyContainer.outerHeight();
					var originalHeaderHeight = StickyHeader.headerContainer.css('height');
					//Compensate the change of the header height after the sticky container was removed from its normal position
					StickyHeader.headerContainer.css('height', originalHeaderHeight);
					//Trigger even just before making the header sticky
					$(document).trigger("sticky-header-before-activated");
					//Make the header sticky
					StickyHeader.headerContainer.addClass('sticky-header');
					StickyHeader.isSticky = true;
					//Effect
					StickyHeader.stickyContainer.css('margin-top', '-' + stickyContainerHeight + 'px').animate({'margin-top': '0'}, 200, 'easeOutCubic');
					//StickyHeader.stickyContainer.css('opacity', '0').animate({'opacity': '1'}, 300, 'easeOutCubic');
				}
				, deactivateSticky : function()
				{
					//Remove the compensation of the header height change
					StickyHeader.headerContainer.css('height', '');
					StickyHeader.headerContainer.removeClass('sticky-header');
					StickyHeader.isSticky = false;
					$(document).trigger("sticky-header-deactivated");
				}
				, suspendSticky : function()
				{
					StickyHeader.isSuspended = true;
					//Deactivate sticky header.
					//Important: call method only when sticky header is actually active.
					if (StickyHeader.isSticky)
					{
						StickyHeader.deactivateSticky();
					}
				}
				, unsuspendSticky : function()
				{
					StickyHeader.isSuspended = false;
					//Activate sticky header.
					//Important: call applySticky instead of activateSticky to check if activation is needed.
					StickyHeader.applySticky();
				}
				, hookToScroll : function()
				{
					$(window).on("scroll", StickyHeader.applySticky);
				}
				, hookToScrollDeferred : function()
				{
					var windowScrollTimeout;
					$(window).on("scroll", function() {
						clearTimeout(windowScrollTimeout);
						windowScrollTimeout = setTimeout(function() {
							StickyHeader.applySticky();
						}, 50);
					});
				}
				, hookToResize : function()
				{
					$(window).on('themeResize', function(e) {
						//Require recalculation
						StickyHeader.requiredRecalculation = true;
						//Remove the compensation of the header height change
						StickyHeader.headerContainer.css('height', '');
					});
				}
				, hookToActivatedDeactivated : function()
				{
					//Move elements to sticky header
					$(document).on('sticky-header-before-activated', function(e, data) {
						jQuery('#nav-holder1').prepend(jQuery('#mini-cart'));
						jQuery('#nav-holder2').prepend(jQuery('#mini-compare'));
					}); //end: on event
					//Move elements from sticky header to normal position
					$(document).on('sticky-header-deactivated', function(e, data) {
						//Move mini cart back to the regular container but only if mini cart is inside the menu holder
						if (jQuery('#mini-cart').parent().hasClass('nav-holder'))
						{
							jQuery('#mini-cart-wrapper-regular').prepend(jQuery('#mini-cart'));
						}
						//Move mini compare back to the regular container but only if mini compare is inside the menu holder
						if (jQuery('#mini-compare').parent().hasClass('nav-holder'))
						{
							jQuery('#mini-compare-wrapper-regular').prepend(jQuery('#mini-compare'));
						}
					}); //end: on event
				}
			}; //end: StickyHeader
			StickyHeader.init();
		}); //end: on document ready
	<?php endif; //end: if sticky  ?>
//]]>
</script> 
